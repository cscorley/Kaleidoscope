/* -*- mode: c++ -*-
 * Aglais
 *     -- A log protocol for keyboard I/O
 * Copyright (C) 2019  noseglasses (shinynoseglasses@gmail.com)
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. If not, see <http://www.gnu.org/licenses/>.
 */
 
#include "Aglais.h"

#include <iostream>
#include <fstream>

namespace {
   bool debug = false;
   uint8_t output_document_type = aglais::DocumentType::compressed;
   bool quote_lines = false;
}

void printUsage(int argc, const char **argv) {
   std::cout << "Usage: " << argv[0] << " <-h | [-d] [-v] [-q] <input_document> <compressed_output_document> >"
         << std::endl;
   std::cout << "   -h: Display help." << std::endl;
   std::cout << "   -d: Debugging output." << std::endl;
   std::cout << "   -v: Generate verbose output file." << std::endl;
   std::cout << "   -q: Quote every line (to be used in C++ code." << std::endl;
}

void parseFlag(const char *flag) {
   
   std::string flag_string{flag};
   
   if(flag_string == "-d") {
      debug = true;
   }
   else if(flag_string == "-v") {
      std::cout << "Generating verbose output file" << std::endl;
      output_document_type = aglais::DocumentType::verbose;
   }
   else if(flag_string == "-q") {
      std::cout << "Quoting lines" << std::endl;
      quote_lines = true;
   }
}

int main(int argc, const char **argv) 
{
   if(argc < 3) {
      printUsage(argc, argv);
      exit(1);
   }
   
   if(argc >= 2) {
      if(std::string{argv[1]} == "-h") {
         printUsage(argc, argv);
      }
   }
   
   int in_file_arg = 1;
   int out_file_arg = 2;
   
   if(argc > 3) {
      for(int i = 1; i < argc - 2; ++i) {
         parseFlag(argv[i]);
         ++in_file_arg;
         ++out_file_arg;
      }
   }
   
   std::cout << "Compressing file \'" << argv[in_file_arg] << "\'" << std::endl;
   std::cout << "Output written to \'" << argv[out_file_arg] << "\'" << std::endl;
   
   std::ifstream input_file{argv[in_file_arg]};
   std::ofstream output_file{argv[out_file_arg]};
   
   aglais::Aglais a{};
   
   a.setDebug(debug);
   a.setOutputDocumentType(output_document_type);
   a.setQuoteLines(quote_lines);
   
   a.compress(input_file, output_file);
}
